//
//  EPluseSugarView.m
//  eHealthCare
//
//  Created by John shi on 2018/10/23.
//  Copyright © 2018年 Jon Shi. All rights reserved.
//

#import "EPluseSugarView.h"

@interface EPluseSugarView ()

@property (weak, nonatomic) IBOutlet UILabel *oneLab;
@property (weak, nonatomic) IBOutlet UILabel *twoDataLab;
@property (weak, nonatomic) IBOutlet UILabel *threeDataLab;

@property (weak, nonatomic) IBOutlet UILabel *conditionLab;
@property (weak, nonatomic) IBOutlet UILabel *twoConditionLab;
@property (weak, nonatomic) IBOutlet UILabel *threeConditionLab;


@property (weak, nonatomic) IBOutlet UIButton *oneBtn;
@property (weak, nonatomic) IBOutlet UIButton *twoTbn;
@property (weak, nonatomic) IBOutlet UIButton *threeBtn;

@property (weak, nonatomic) IBOutlet UILabel *testTimeLab;


@property (weak, nonatomic) IBOutlet UILabel *middleOneLab;
@property (weak, nonatomic) IBOutlet UILabel *middleTwoLab;
@property (weak, nonatomic) IBOutlet UILabel *middleThreeLab;
@property (weak, nonatomic) IBOutlet UILabel *middleFourLab;
@property (weak, nonatomic) IBOutlet UILabel *middleFiveLab;
@property (weak, nonatomic) IBOutlet UILabel *middleSixLab;

@property (weak, nonatomic) IBOutlet UILabel *detailLab;
@property (weak, nonatomic) IBOutlet UILabel *detailTwoLab;
@property (weak, nonatomic) IBOutlet UILabel *detailThreeLab;


@property (weak, nonatomic) IBOutlet NSLayoutConstraint *btnTTrailCons;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *btnTrailCons;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *btnThreeTrailCons;
@end


@implementation EPluseSugarView

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/
- (void)awakeFromNib {
    [super awakeFromNib];
    self.backgroundColor = [UIColor getColor:@"EFF8FE"];
   
    self.trajecView.layer.borderColor = [UIColor getColor:@"DAE4EB"].CGColor;
    self.trajecView.layer.borderWidth = .5f;
    self.trajecView.layer.cornerRadius = 6;
    self.trajecView.layer.masksToBounds = YES;
    
    
    self.trajecViewTwo.layer.borderColor = [UIColor getColor:@"DAE4EB"].CGColor;
    self.trajecViewTwo.layer.borderWidth = .5f;
    self.trajecViewTwo.layer.cornerRadius = 6;
    self.trajecViewTwo.layer.masksToBounds = YES;
    
    self.trajecViewThree.layer.borderColor = [UIColor getColor:@"DAE4EB"].CGColor;
    self.trajecViewThree.layer.borderWidth = .5f;
    self.trajecViewThree.layer.cornerRadius = 6;
    self.trajecViewTwo.layer.masksToBounds = YES;
    
    self.smTrajectView.layer.cornerRadius = 4;
    self.smTrajectView.layer.masksToBounds = YES;
    self.smTrajectViewTwo.layer.cornerRadius = 4;
    self.smTrajectViewTwo.layer.masksToBounds = YES;
    self.smTrajectViewThree.layer.cornerRadius = 4;
    self.smTrajectViewThree.layer.masksToBounds = YES;
    CAShapeLayer *maskLayer = [[CAShapeLayer alloc] init];
    UIBezierPath *corPath = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, KScreenWidth-20, self.backView.frame.size.height) byRoundingCorners:UIRectCornerBottomRight | UIRectCornerBottomLeft cornerRadii:CGSizeMake(5, 5)];
    maskLayer.frame = corPath.bounds;
    maskLayer.path=corPath.CGPath;
    self.backView.layer.mask=maskLayer;
    if (IS_IPHONE5||IS_IPHONE4S) {
        self.trajectViewWidth.constant = self.trajectViewTwoWidth.constant = self.trajectViewThreeWidth.constant =  KWidth(142);

    }else
    {
          self.trajectViewWidth.constant = self.trajectViewTwoWidth.constant = self.trajectViewThreeWidth.constant =  KWidth(152);
    }
    self.smTranLabCenterX.constant = self.smTranThreeLabCenterX.constant = self.smTranFiveLabCenterX.constant =self.trajectViewWidth.constant/3.0-10;
    
    self.smTranSixLabCenterX.constant =  self.smTranFourLabCenterX.constant = self.smTranTwoLabCenterX.constant =-(self.trajectViewWidth.constant/3.0)+10;
  

}
-(NSInteger)getColorStr:(NSString *)typeValue minValue:(CGFloat)minValue maxValue:(CGFloat)maxValue ExceptionFlag:(NSInteger)ExceptionFlag;
{
    if (ExceptionFlag == 0) {// 1  2 3 4
        if ([typeValue floatValue] < minValue) {
            
            
            return 1;//@"FFD36D";  di
        }else  if ([typeValue floatValue]> maxValue)
        {
            
            return 2;//@"FF4564"; gao
        }
        else
            return 3;//@"B3BBC4"; weijiance
    }else
    {
        return 4;//@"07DD8F";  zhengchang
        
    }
    
}
-(NSString *)getStatus:(NSInteger)status{
    if (status == 1) {
        
        
        return @"FFD36D";
    }else if (status == 2)
    {
        
        return @"FF4564";
    }
    else  if (status == 3)
    {
        return @"B3BBC4";
    }
    else
    {
        
        return @"07DD8F";
    }
}
-(void)setPhysicalMod:(NSArray *)PhysicalMod
{
    _PhysicalMod = PhysicalMod;
    
    for ( PhysicalList *model in PhysicalMod) {
        if ([model.PhysicalItemIdentifier containsString:@"BG_"]&&(self.isSugar == YES)) {
            self.oneLab.text = @"空腹血糖:";
            self.twoDataLab.text = @"餐后2小时血糖:";
            self.threeDataLab.text = @"随机血糖:";
            self.middleOneLab.text = @"3.9";
             self.middleTwoLab.text = @"6.1";
             self.middleThreeLab.text = @"7.8";
             self.middleFourLab.text = @"9.0";
             self.middleFiveLab.text = @"3.9";
            self.middleSixLab.text = @"6.1";
            self.detailLab.hidden = self.detailTwoLab.hidden = self.detailThreeLab.hidden = YES;
             NSString *name =  [self nameTitleLabWithPhysicalItemIdentifier:model.PhysicalItemIdentifier];
            
           CGFloat centerX = 0;
            if ([self.oneLab.text containsString:name]) {
                self.conditionLab.text = (model.ExceptionFlag == 1)?(@"正常"):((model.ParameterName)?(model.ParameterName):(@"未检测"));
                self.conditionLab.textColor = [UIColor getColor:[self getStatus:[self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]]];
                //            bubble_jiance_normal bubble_jiance_high
                if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==1) {
                    [self.oneBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_low"] forState:UIControlStateNormal];
                   centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/( [self.middleOneLab.text floatValue]);
                    self.btnTTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    
                    
                }else  if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==2) {
                    [self.oneBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_high"] forState:UIControlStateNormal];
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleTwoLab.text floatValue]- [self.middleOneLab.text floatValue]);
                    self.btnTTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                }else{
                    
                    [self.oneBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_normal"] forState:UIControlStateNormal];
                   centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleTwoLab.text floatValue]- [self.middleOneLab.text floatValue]+[self.middleTwoLab.text floatValue]);
                    self.btnTTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                }
                
                
                    UIBezierPath *path2=[UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, centerX, 8)      byRoundingCorners:UIRectCornerBottomRight | UIRectCornerTopRight    cornerRadii:CGSizeMake(centerX, 8*0.5)];
                
                    CAShapeLayer *layer2=[CAShapeLayer layer];
                
                    layer2.frame=CGRectMake(0, 0, centerX,8);
                
                    layer2.fillColor = [ self.conditionLab.textColor CGColor];
                
                    layer2.path=path2.CGPath;
                
                    [self.smTrajectView.layer addSublayer:layer2];
              
            }
            if ([self.twoDataLab.text containsString:name]) {
                self.twoConditionLab.text = (model.ExceptionFlag == 1)?(@"正常"):((model.ParameterName)?(model.ParameterName):(@"未检测"));
                self.twoConditionLab.textColor = [UIColor getColor:[self getStatus:[self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]]];
                if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==1) {
                    [self.twoTbn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_low"] forState:UIControlStateNormal];
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/( [self.middleThreeLab.text floatValue]);
                    self.btnTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    
                }else  if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==2) {
                    [self.twoTbn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_high"] forState:UIControlStateNormal];
                   centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleFourLab.text floatValue]- [self.middleThreeLab.text floatValue]);
                    self.btnTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                }else{
                     centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleFourLab.text floatValue]- [self.middleThreeLab.text floatValue]+[self.middleFourLab.text floatValue]);
                    self.btnTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.twoTbn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_normal"] forState:UIControlStateNormal];
                }
                [self.twoTbn setTitle:model.TypeParameter forState:UIControlStateNormal];
                
                
                UIBezierPath *path2=[UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0,centerX, 8)      byRoundingCorners:UIRectCornerBottomRight | UIRectCornerTopRight    cornerRadii:CGSizeMake(centerX, 8*0.5)];
                
                CAShapeLayer *layer2=[CAShapeLayer layer];
                
                layer2.frame=CGRectMake(0, 0, centerX,8);
                
                layer2.fillColor = [self.twoConditionLab.textColor CGColor];
                
                layer2.path=path2.CGPath;
                
                [self.smTrajectViewTwo.layer addSublayer:layer2];
            }
            if ([self.threeDataLab.text containsString:name]) {
                self.threeConditionLab.text = (model.ExceptionFlag == 1)?(@"正常"):((model.ParameterName)?(model.ParameterName):(@"未检测"));
                 self.threeConditionLab.textColor = [UIColor getColor:[self getStatus:[self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]]];
                if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==1) {
                    [self.threeBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_low"] forState:UIControlStateNormal];
                     centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/( [self.middleFiveLab.text floatValue]);
                    self.btnThreeTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    
                }else  if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==2) {
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleSixLab.text floatValue]- [self.middleFiveLab.text floatValue]);
                    self.btnThreeTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.threeBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_high"] forState:UIControlStateNormal];
                }else{
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleSixLab.text floatValue]- [self.middleFiveLab.text floatValue]+[self.middleSixLab.text floatValue]);
                    self.btnThreeTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.threeBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_normal"] forState:UIControlStateNormal];
                }
                [self.threeBtn setTitle:model.TypeParameter forState:UIControlStateNormal];
                
                
                UIBezierPath *path2=[UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0,centerX, 8)      byRoundingCorners:UIRectCornerBottomRight | UIRectCornerTopRight    cornerRadii:CGSizeMake(centerX, 8*0.5)];
                
                CAShapeLayer *layer2=[CAShapeLayer layer];
                
                layer2.frame=CGRectMake(0, 0, centerX,8);
                
                layer2.fillColor = [ self.threeConditionLab.textColor CGColor];
                
                layer2.path=path2.CGPath;
                
                [self.smTrajectViewThree.layer addSublayer:layer2];
            }
        }else
        {
            
            NSString *name =  [self nameTitleLabWithPhysicalItemIdentifier:model.PhysicalItemIdentifier];
            self.oneLab.text = @"收缩压:";
             self.twoDataLab.text = @"舒张压:";
             self.threeDataLab.text = @"脉率:";
            self.middleOneLab.text = @"90";
            self.middleTwoLab.text = @"140";
            self.middleThreeLab.text = @"60";
            self.middleFourLab.text = @"90";
            self.middleFiveLab.text = @"60";
            self.middleSixLab.text = @"100";
             self.detailLab.hidden = self.detailTwoLab.hidden = self.detailThreeLab.hidden = NO;
             CGFloat centerX = 0;
            if ([self.oneLab.text containsString:name]) {
                self.conditionLab.text = (model.ExceptionFlag == 1)?(@"正常"):((model.ParameterName)?(model.ParameterName):(@"未检测"));
                 self.conditionLab.textColor = [UIColor getColor:[self getStatus:[self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]]];
                //            bubble_jiance_normal bubble_jiance_high
                if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==1) {
                    [self.oneBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_low"] forState:UIControlStateNormal];
                    
                   centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/( [self.middleOneLab.text floatValue]);
                    self.btnTTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                }else  if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==2) {
                    [self.oneBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_high"] forState:UIControlStateNormal];
                    
                   centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleTwoLab.text floatValue]- [self.middleOneLab.text floatValue]);
                    self.btnTTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                }else{
                    
                    [self.oneBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_normal"] forState:UIControlStateNormal];
                    
                   centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleTwoLab.text floatValue]- [self.middleOneLab.text floatValue]+[self.middleTwoLab.text floatValue]);
                    self.btnTTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                }
                
                
                [self.oneBtn setTitle:model.TypeParameter forState:UIControlStateNormal];
                
                
                UIBezierPath *path2=[UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, centerX, 8)      byRoundingCorners:UIRectCornerBottomRight | UIRectCornerTopRight    cornerRadii:CGSizeMake(centerX, 8*0.5)];
                
                CAShapeLayer *layer2=[CAShapeLayer layer];
                
                layer2.frame=CGRectMake(0, 0, centerX,8);
                
                layer2.fillColor = [self.conditionLab.textColor CGColor];
                
                layer2.path=path2.CGPath;
                
                [self.smTrajectView.layer addSublayer:layer2];
            }
            if ([self.twoDataLab.text containsString:name]) {
               
                self.twoConditionLab.text = (model.ExceptionFlag == 1)?(@"正常"):((model.ParameterName)?(model.ParameterName):(@"未检测"));
                  self.twoConditionLab.textColor = [UIColor getColor:[self getStatus:[self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]]];
                if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==1) {
                    
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/( [self.middleThreeLab.text floatValue]);
                    self.btnTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.twoTbn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_low"] forState:UIControlStateNormal];
                }else  if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==2) {
                    [self.twoTbn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_high"] forState:UIControlStateNormal];
                    
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleFourLab.text floatValue]- [self.middleThreeLab.text floatValue]);
                    
                    
                    self.btnTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                }else{
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleFourLab.text floatValue]- [self.middleThreeLab.text floatValue]+[self.middleFourLab.text floatValue]);
                    self.btnTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.twoTbn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_normal"] forState:UIControlStateNormal];
                }
                [self.twoTbn setTitle:model.TypeParameter forState:UIControlStateNormal];
                
                
                UIBezierPath *path2=[UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, centerX, 8)      byRoundingCorners:UIRectCornerBottomRight | UIRectCornerTopRight    cornerRadii:CGSizeMake(centerX, 8*0.5)];
                
                CAShapeLayer *layer2=[CAShapeLayer layer];
                
                layer2.frame=CGRectMake(0, 0, centerX,8);
                
                layer2.fillColor = [ self.twoConditionLab.textColor CGColor];
                
                layer2.path=path2.CGPath;
                
                [self.smTrajectViewTwo.layer addSublayer:layer2];
            }
            if ([self.threeDataLab.text containsString:name]) {
                self.threeConditionLab.text = (model.ExceptionFlag == 1)?(@"正常"):((model.ParameterName)?(model.ParameterName):(@"未检测"));
                self.threeConditionLab.textColor = [UIColor getColor:[self getStatus:[self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]]];
                if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==1) {
                    
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/( [self.middleFiveLab.text floatValue]);
                    self.btnThreeTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.threeBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_low"] forState:UIControlStateNormal];
                }else  if ( [self getColorStr:model.TypeParameter minValue:model.MinValue maxValue:model.MaxValue ExceptionFlag:model.ExceptionFlag]==2) {
                    
                    centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleSixLab.text floatValue]- [self.middleFiveLab.text floatValue]);
                    self.btnThreeTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.threeBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_high"] forState:UIControlStateNormal];
                }else{
                     centerX =  (self.trajectViewWidth.constant/3.0)*([model.TypeParameter floatValue])/([self.middleSixLab.text floatValue]- [self.middleFiveLab.text floatValue]+[self.middleSixLab.text floatValue]);
                    self.btnThreeTrailCons.constant = -(self.trajectViewWidth.constant)+centerX-23;
                    [self.threeBtn setBackgroundImage:[UIImage imageNamed:@"bubble_jiance_normal"] forState:UIControlStateNormal];
                }
                [self.threeBtn setTitle:model.TypeParameter forState:UIControlStateNormal];
                
                UIBezierPath *path2=[UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, centerX, 8)      byRoundingCorners:UIRectCornerBottomRight | UIRectCornerTopRight    cornerRadii:CGSizeMake(centerX, 8*0.5)];
                
                CAShapeLayer *layer2=[CAShapeLayer layer];
                
                layer2.frame=CGRectMake(0, 0, centerX,8);
                
                layer2.fillColor = [self.threeConditionLab.textColor CGColor];
                
                layer2.path=path2.CGPath;
                
                [self.smTrajectViewThree.layer addSublayer:layer2];
            }
        }
       
    }
    
    
    
    
    
}
-(NSString *)nameTitleLabWithPhysicalItemIdentifier:(NSString *)PhysicalItemIdentifier
{
    NSString *nameStr;
    if ([PhysicalItemIdentifier isEqualToString:@"BP_002"]) {
        nameStr = [NSString stringWithFormat:@"收缩压"];
    }
    if ([PhysicalItemIdentifier isEqualToString:@"BP_001"]) {
        nameStr = [NSString stringWithFormat:@"舒张压"];
    }
    if ([PhysicalItemIdentifier isEqualToString:@"RHR"]||[PhysicalItemIdentifier isEqualToString:@"ECG_001"]) {
        nameStr = [NSString stringWithFormat:@"心率"];
    }
    if ([PhysicalItemIdentifier isEqualToString:@"BO"]) {
        nameStr = [NSString stringWithFormat:@"血氧"];
    }
    if ([PhysicalItemIdentifier isEqualToString:@"BG_001"]) {
        nameStr = [NSString stringWithFormat:@"餐后2小时血糖"];
    }
    if ([PhysicalItemIdentifier isEqualToString:@"BG_002"]) {
        nameStr = [NSString stringWithFormat:@"空腹血糖"];
    }
    if ([PhysicalItemIdentifier isEqualToString:@"BG_003"]) {
        nameStr = [NSString stringWithFormat:@"随机血糖"];
    }

//    if ([PhysicalItemIdentifier isEqualToString:@"HG"]) {
//        nameStr = [NSString stringWithFormat:@"身高"];
//    }
  
    return nameStr;
}
@end

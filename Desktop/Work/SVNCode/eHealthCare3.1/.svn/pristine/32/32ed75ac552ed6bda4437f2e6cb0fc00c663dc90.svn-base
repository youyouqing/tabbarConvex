//
//  XKTopicHomeController.m
//  eHealthCare
//
//  Created by jamkin on 2017/6/13.
//  Copyright © 2017年 mac. All rights reserved.
//

#import "XKTopicHomeController.h"
#import "XKTopicHotChildController.h"
#import "XKHealthPlanModel.h"
#import "XKValidationAndAddScoreTools.h"
#import "HealthPlanView.h"
#import "HomeViewModel.h"
@interface XKTopicHomeController ()
@property (nonatomic, strong) HealthPlanView *planView;///顶部滚动视图

@property (nonatomic,strong) NSMutableArray *topicTypeArray;

@end
static NSString *healthTopicCategoryFileName = @"healthTopicCategory.plist";

@implementation XKTopicHomeController

- (void)viewDidLoad {
    [super viewDidLoad];

    self.myTitle = @"健康话题";
    
    self.topicTypeArray = [NSMutableArray arrayWithCapacity:0];
   
  
    
    NSDictionary *dic = [DataSaveTool getDataFromPlistFile:healthTopicCategoryFileName];
    if (!dic)
    {
        [self getTopicCategoryArrayWithNetWorking];
    }else
    {
        self.topicTypeArray = [dic objectForKey:healthTopicCategoryFileName];
        [self addSubViewController];
    }
    
    
}

#pragma mark Private Methoud
- (void)addSubViewController
{
    NSMutableArray *mArray = [NSMutableArray arrayWithCapacity:0];
    
    UIScrollView *scrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, PublicY + KHeight(45), KScreenWidth, KScreenHeight - (PublicY) - KHeight(45))];
    
    scrollView.delegate = self;
    scrollView.pagingEnabled = YES;
    scrollView.contentSize = CGSizeMake(KScreenWidth * self.topicTypeArray.count, KScreenHeight - (PublicY) - KHeight(45));
    
    [self.view addSubview:scrollView];
    for (int i = 0; i <self.topicTypeArray.count; i++)
    {
        //将名称剥离出来
        NSDictionary *dic = [self.topicTypeArray objectAtIndex:i];
        [mArray addObject:dic[@"TypeName"]];
        
        XKTopicHotChildController *all = [[XKTopicHotChildController alloc] initWithType:pageTypeNoNavigation];
//        all.myTitle = dic[@"TypeName"];
//        all.typeArray = self.topicTypeArray;
         all.typeArray = [XKHealthPlanModel mj_objectArrayWithKeyValuesArray:self.topicTypeArray] ;
        all.model = [XKHealthPlanModel objectWithKeyValues:dic];
        [scrollView addSubview:all.view];
        [self addChildViewController:all];
        all.view.frame = CGRectMake(0 + i * KScreenWidth, 0, CGRectGetWidth(scrollView.frame), CGRectGetHeight(scrollView.frame));
        
    }
    
    //头部分类视图
    HealthPlanHead *headView = [[HealthPlanHead alloc]init];
    headView.itemWidth = KScreenWidth / 5;
    
    HealthPlanView *planView = [[HealthPlanView alloc]initWithFrame:CGRectMake(0, PublicY, KScreenWidth, KHeight(45))];
    planView.tapAnimation = YES;
    planView.headView = headView;
    planView.titleArray = mArray;
    
    __weak typeof (scrollView)weakScrollView = scrollView;
    [planView setItemHasBeenClickBlcok:^(NSInteger index,BOOL animation){
        
        //将两个scrollView联动起来
        [weakScrollView scrollRectToVisible:CGRectMake(index * CGRectGetWidth(weakScrollView.frame), 0.0, CGRectGetWidth(weakScrollView.frame),CGRectGetHeight(weakScrollView.frame)) animated:animation];
        
    }];
    [self.view addSubview:planView];
    self.planView = planView;
}


#pragma mark NetWorking

- (void)getTopicCategoryArrayWithNetWorking
{
    NSDictionary *dic = @{@"Token":[UserInfoTool getLoginInfo].Token,
                          @"TypeFlag":@(3)};
    
    [HomeViewModel getTopicCategoryOrInformationCategoryOrHealthPlanCategoryWithParams:dic FinishedBlock:^(ResponseObject *response) {
        
        if (response.code == CodeTypeSucceed) {
            
            self.topicTypeArray = response.Result;
            
            //讲数据存储到沙盒
            if (self.topicTypeArray.count > 0)
            {
                NSDictionary *dic = @{healthTopicCategoryFileName:response.Result};
                [DataSaveTool saveDataAtPlistFile:healthTopicCategoryFileName dataDic:dic];
                
                [self addSubViewController];
                [self hiddenPlaceHoldImage];
            }else
            {
                [self showPlaceHoldImageAtCenterOfViewController:healthPlanNoDataImage];
            }
            
        }else
        {
            [self showPlaceHoldImageAtCenterOfViewController:healthPlanNoDataImage];
        }
    }];
}

#pragma mark ScrollView Delegate

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    float offset = scrollView.contentOffset.x;
    offset = offset/CGRectGetWidth(scrollView.frame);
    [self.planView moveToIndex:offset];
}

- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    float offset = scrollView.contentOffset.x;
    offset = offset/CGRectGetWidth(scrollView.frame);
    [self.planView endMoveToIndex:offset];
    
}

//// 添加所有子控制器
//- (void)setUpAllViewController
//{
//
//    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
//
//    if ([defaults objectForKey:@"topicTitleSave"]) {
//        NSDictionary *dict = [defaults objectForKey:@"topicTitleSave"];
//        NSArray *arr =    [XKHealthPlanModel objectArrayWithKeyValuesArray:[dict objectForKey:@"Result"]];
//        for (XKHealthPlanModel *type in arr) {
//            if (![type.TypeName isEqualToString:@"推荐"]) {
//                [self.topicTypeArray addObject:type];
//            }
//        }
//
//        NSLog(@"%@---%@",arr,self.topicTypeArray);
//
//        for (int i = 0; i<arr.count; i++) {
//
//
//            XKHealthPlanModel *model = arr[i];
//            //                if (model.TypeFlag == 3) {
//            XKTopicHotChildController *all = [[XKTopicHotChildController alloc] init];
//            all.typeArray = self.topicTypeArray;
//            all.title = model.TypeName;
//            all.model = model;
//            [self addChildViewController:all];
//            //                }
//
//
//        }
//
//        NSInteger widthCount = 0;
//        if (arr.count>=5) {
//            widthCount = 5;
//        }else{
//            widthCount = arr.count;
//        }
//
//        [self setUpTitleEffect:^(UIColor *__autoreleasing *titleScrollViewColor, UIColor *__autoreleasing *norColor, UIColor *__autoreleasing *selColor, UIFont *__autoreleasing *titleFont, CGFloat *titleHeight, CGFloat *titleWidth) {
//            *norColor = [UIColor lightGrayColor];
//            *selColor = NAVICOLOR;
//            *titleWidth = [UIScreen mainScreen].bounds.size.width / widthCount;
//        }];
//
//        // 标题渐变
//        // *推荐方式(设置标题渐变)
//        [self setUpTitleGradient:^(YZTitleColorGradientStyle *titleColorGradientStyle, UIColor *__autoreleasing *norColor, UIColor *__autoreleasing *selColor) {
//
//        }];
//
//        [self setUpUnderLineEffect:^(BOOL *isUnderLineDelayScroll, CGFloat *underLineH, UIColor *__autoreleasing *underLineColor,BOOL *isUnderLineEqualTitleWidth) {
//            //        *isUnderLineDelayScroll = YES;
//            *isUnderLineEqualTitleWidth = YES;
//        }];
//
//        [self refreshDisplay];
//    }else{
//        //获取用户话题分类
//        [[XKLoadingView shareLoadingView]showLoadingText:nil];
//        [ProtosomaticHttpTool protosomaticPostWithURLString:@"908" parameters:@{@"Token":[UserInfoTool getLoginInfo].Token,@"TypeFlag":@(1)} success:^(id json) {
//
//            NSLog(@"%@",json);
//            if ([[[json objectForKey:@"Basis"] objectForKey:@"Msg"] isEqualToString:@"操作成功"]) {
//
//                [[XKLoadingView shareLoadingView] hideLoding];
//
//                [defaults setObject:json forKey:@"topicTitleSave"];//保存健康话题
//
//                NSArray *arr =    [XKHealthPlanModel objectArrayWithKeyValuesArray:[json objectForKey:@"Result"]];
//
//                //            self.topicTypeArray = (NSMutableArray *)arr;
//
//                for (XKHealthPlanModel *type in arr) {
//                    if (![type.TypeName isEqualToString:@"推荐"]) {
//                        [self.topicTypeArray addObject:type];
//                    }
//                }
//
//                NSLog(@"%@---%@",arr,self.topicTypeArray);
//
//                for (int i = 0; i<arr.count; i++) {
//
//
//                    XKHealthPlanModel *model = arr[i];
//                    //                if (model.TypeFlag == 3) {
//                    XKTopicHotChildController *all = [[XKTopicHotChildController alloc] init];
//                    all.typeArray = self.topicTypeArray;
//                    all.title = model.TypeName;
//                    all.model = model;
//                    [self addChildViewController:all];
//                    //                }
//
//
//                }
//
//                NSInteger widthCount = 0;
//                if (arr.count>=5) {
//                    widthCount = 5;
//                }else{
//                    widthCount = arr.count;
//                }
//
//                [self setUpTitleEffect:^(UIColor *__autoreleasing *titleScrollViewColor, UIColor *__autoreleasing *norColor, UIColor *__autoreleasing *selColor, UIFont *__autoreleasing *titleFont, CGFloat *titleHeight, CGFloat *titleWidth) {
//                    *norColor = [UIColor lightGrayColor];
//                    *selColor = NAVICOLOR;
//                    *titleWidth = [UIScreen mainScreen].bounds.size.width / widthCount;
//                }];
//
//                // 标题渐变
//                // *推荐方式(设置标题渐变)
//                [self setUpTitleGradient:^(YZTitleColorGradientStyle *titleColorGradientStyle, UIColor *__autoreleasing *norColor, UIColor *__autoreleasing *selColor) {
//
//                }];
//
//                [self setUpUnderLineEffect:^(BOOL *isUnderLineDelayScroll, CGFloat *underLineH, UIColor *__autoreleasing *underLineColor,BOOL *isUnderLineEqualTitleWidth) {
//                    //        *isUnderLineDelayScroll = YES;
//                    *isUnderLineEqualTitleWidth = YES;
//                }];
//
//                [self refreshDisplay];
//
//            }else{
//                [[XKLoadingView shareLoadingView]errorloadingText:nil];
//            }
//
//        } failure:^(id error) {
//
//            NSLog(@"%@",error);
//            [[XKLoadingView shareLoadingView]errorloadingText:nil];
//
//        }];
//    }
//
//}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

@end

//
//  InformationCell.m
//  eHealthCare
//
//  Created by John shi on 2018/10/12.
//  Copyright © 2018年 Jon Shi. All rights reserved.
//

#import "InformationCell.h"
#import "HealthPlanView.h"
#import "InformationCollectionViewCell.h"
#import "HomeViewModel.h"
@interface InformationCell()
@property (nonatomic, strong) NSArray *dataArray;
@property (nonatomic, strong) HealthPlanView *planView;///顶部滚动视图
@property (weak, nonatomic) IBOutlet UIView *backView;
@property (weak, nonatomic) IBOutlet UICollectionView *collectionView;
@property (strong, nonatomic) UICollectionViewLayout *customLayout;
@end
@implementation InformationCell
static NSString *const cellId = @"cellId";
static NSString *const headerId = @"headerId";
static NSString *const footerId = @"footerId";
//沙盒存储所用 同时也是从沙盒取出的dic的key value是我们需要的数据
static NSString *healthPlanCategoryFileName = @"healthPlanCategory.plist";
- (void)awakeFromNib {
    [super awakeFromNib];
    _customLayout = [[UICollectionViewLayout alloc] init]; // 自定义的布局对象
    _collectionView.dataSource = self;
    _collectionView.delegate = self;
  
     self.backgroundColor = [UIColor getColor:@"edf8ff"];
    // 注册cell、sectionHeader、sectionFooter
    [_collectionView registerNib:[UINib nibWithNibName:@"InformationCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:cellId];
    UICollectionViewFlowLayout *flow = [[UICollectionViewFlowLayout alloc] init];
    flow.itemSize = CGSizeMake((KScreenWidth-20)/2, 246+10);
    flow.minimumLineSpacing = 0;
    flow.minimumInteritemSpacing = 0;
    flow.scrollDirection = UICollectionViewScrollDirectionVertical;
    _collectionView.showsHorizontalScrollIndicator=NO;
    _collectionView.showsVerticalScrollIndicator=NO;
    [_collectionView setCollectionViewLayout:flow];
    NSDictionary *dic = [DataSaveTool getDataFromPlistFile:healthPlanCategoryFileName];
    if (!dic)
    {
        [self getHealthPlanCategoryArrayWithNetWorking];
    }else
    {
        self.dataArray = [dic objectForKey:healthPlanCategoryFileName];
        [self addSubViewController];
    }
    
    CAShapeLayer *maskTwoLayer = [[CAShapeLayer alloc] init];
    UIBezierPath *corTwoPath = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, KScreenWidth-(2*10), (246+10)*2) byRoundingCorners:UIRectCornerBottomLeft | UIRectCornerBottomRight cornerRadii:CGSizeMake(5, 5)];
    maskTwoLayer.frame = corTwoPath.bounds;
    maskTwoLayer.path=corTwoPath.CGPath;
    self.collectionView.layer.mask=maskTwoLayer;
   
}
#pragma mark Private Methoud
- (void)addSubViewController
{
    NSMutableArray *mArray = [NSMutableArray arrayWithCapacity:0];
    CGFloat width = KScreenWidth -20;
    UIScrollView *scrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 0, width, (246+10)*2+ KHeight(45))];
    
    scrollView.delegate = self;
    scrollView.pagingEnabled = YES;
    scrollView.contentSize = CGSizeMake(width * self.dataArray.count,(246+10)*2+ KHeight(45));// KScreenHeight - (PublicY) - KHeight(45)
    
    [self.backView addSubview:scrollView];
    for (int i = 0; i < self.dataArray.count; i++)
    {
        //将名称剥离出来
        NSDictionary *dic = [self.dataArray objectAtIndex:i];
        [mArray addObject:dic[@"TypeName"]];
       [scrollView addSubview:_collectionView];
    }
    
    //头部分类视图
    HealthPlanHead *headView = [[HealthPlanHead alloc]init];
    headView.itemWidth = (width) / 5;
    
    HealthPlanView *planView = [[HealthPlanView alloc]initWithFrame:CGRectMake(0, 0, width, KHeight(45))];
    planView.tapAnimation = YES;
    planView.headView = headView;
    planView.titleArray = mArray;
    
    __weak typeof (scrollView)weakScrollView = scrollView;
    [planView setItemHasBeenClickBlcok:^(NSInteger index,BOOL animation){
        
        //将两个scrollView联动起来
        [weakScrollView scrollRectToVisible:CGRectMake(index * CGRectGetWidth(weakScrollView.frame), 0.0, CGRectGetWidth(weakScrollView.frame),CGRectGetHeight(weakScrollView.frame)) animated:animation];
        
    }];
    [self.backView addSubview:planView];
    self.planView = planView;
}


#pragma mark NetWorking

- (void)getHealthPlanCategoryArrayWithNetWorking
{
    NSDictionary *dic = @{@"Token":[UserInfoTool getLoginInfo].Token,
                          @"TypeFlag":@(3)};
    
    [HomeViewModel getTopicCategoryOrInformationCategoryOrHealthPlanCategoryWithParams:dic FinishedBlock:^(ResponseObject *response) {
        
        if (response.code == CodeTypeSucceed) {
            
            self.dataArray = response.Result;
            
            //讲数据存储到沙盒
            if (self.dataArray.count > 0)
            {
                NSDictionary *dic = @{healthPlanCategoryFileName:response.Result};
                [DataSaveTool saveDataAtPlistFile:healthPlanCategoryFileName dataDic:dic];
                
                [self addSubViewController];
                [self hiddenPlaceHoldImage];
            }else
            {
//                [self showPlaceHoldImageAtCenterOfViewController:healthPlanNoDataImage];
            }
            
        }else
        {
//            [self showPlaceHoldImageAtCenterOfViewController:healthPlanNoDataImage];
        }
    }];
}

#pragma mark ScrollView Delegate

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    float offset = scrollView.contentOffset.x;
    offset = offset/CGRectGetWidth(scrollView.frame);
    [self.planView moveToIndex:offset];
}

- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    float offset = scrollView.contentOffset.x;
    offset = offset/CGRectGetWidth(scrollView.frame);
    [self.planView endMoveToIndex:offset];
    
}
#pragma mark ---- UICollectionViewDataSource

- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}


- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return 4;
}


- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    InformationCollectionViewCell *cell = [_collectionView dequeueReusableCellWithReuseIdentifier:cellId forIndexPath:indexPath];
    return cell;
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

@end
